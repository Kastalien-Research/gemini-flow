{
  "name": "@clduab11/gemini-flow",
  "version": "1.3.3",
  "description": "Advanced AI coordination framework with MCP protocol integration",
  "main": "index.js",
  "type": "module",
  "bin": {
    "gemini-flow": "./bin/gemini-flow",
    "gf": "./bin/gemini-flow"
  },
  "engines": {
    "node": ">=18.0.0 <=24.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "start": "node index.js",
    "dev": "nodemon index.js",
    "build": "npm run build:cli",
    "build:cli": "npx tsc --project tsconfig.cli.json || npx tsc --allowJs --target ES2020 --module ESNext --outDir dist src/cli/*.ts src/cli/**/*.ts",
    "build:full": "npm run build:consensus && npm run build:benchmarks",
    "frontend:dev": "cd frontend && npm run dev",
    "frontend:build": "cd frontend && npm run build",
    "frontend:preview": "cd frontend && npm run preview",
    "frontend:install": "cd frontend && npm install",
    "backend:dev": "cd backend && npm run dev",
    "backend:start": "cd backend && npm start",
    "backend:install": "cd backend && npm install",
    "dev:full": "concurrently \"npm run backend:dev\" \"npm run frontend:dev\" --names \"backend,frontend\" --prefix-colors \"blue,green\"",
    "build:consensus": "rollup -c rollup.consensus.config.js",
    "build:benchmarks": "rollup -c rollup.benchmarks.config.js",
    "lint": "eslint src --ext .js,.ts,.jsx,.tsx",
    "lint:fix": "eslint src --ext .js,.ts,.jsx,.tsx --fix",
    "typecheck": "tsc -p tsconfig.cli.json --noEmit",
    "typecheck:full": "tsc --noEmit",
    "format": "prettier --write \"src/**/*.{js,ts,jsx,tsx,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{js,ts,jsx,tsx,json,md}\"",
    "clean": "rm -rf dist .nyc_output",
    "consensus:start": "node src/consensus/consensus-coordinator.js",
    "swarm:init": "node src/swarm/swarm-initializer.js",
    "benchmark:google-services": "node src/benchmarks/benchmark-runner.js --mode comprehensive",
    "benchmark:quick": "node src/benchmarks/benchmark-runner.js --mode quick",
    "benchmark:soak": "node src/benchmarks/benchmark-runner.js --mode soak",
    "benchmark:spike": "node src/benchmarks/benchmark-runner.js --mode spike",
    "benchmark:optimization": "node src/benchmarks/benchmark-runner.js --mode optimization",
    "performance:analyze": "node src/benchmarks/performance-optimization-strategies.js",
    "load-test:1k": "node src/benchmarks/load-testing-coordinator.js --scenario concurrent_1k",
    "load-test:10k": "node src/benchmarks/load-testing-coordinator.js --scenario concurrent_10k",
    "load-test:100k": "node src/benchmarks/load-testing-coordinator.js --scenario concurrent_100k",
    "load-test:sustained": "node src/benchmarks/load-testing-coordinator.js --scenario sustained_24h",
    "monitoring:start": "node src/monitoring/performance-monitor.js",
    "grafana:import": "node scripts/import-grafana-dashboard.js",
    "health-check": "node scripts/health-check.js",
    "validate:google-services": "bash scripts/deployment/validate-google-services.sh",
    "drain-queues": "node src/scripts/drain-queues.js",
    "install:enterprise": "npm install --production && npm run build:enterprise",
    "build:enterprise": "npm run build && npm run optimize:enterprise",
    "optimize:enterprise": "node scripts/enterprise-optimization.js",
    "deploy:staging": "npm run build && node scripts/deploy.js staging",
    "deploy:production": "npm run build && node scripts/deploy.js production",
    "docs:generate": "typedoc --out docs src",
    "docs:serve": "http-server docs -p 8080",
    "security:audit": "npm audit --audit-level moderate",
    "docker:build": "docker build -t gemini-flow:latest .",
    "docker:run": "docker run -p 3000:3000 -p 8080:8080 gemini-flow:latest",
    "kubernetes:deploy": "kubectl apply -f k8s/",
    "postinstall": "node scripts/postinstall.cjs || true",
    "prepare": "husky install || true",
    "mcp:smoke": "node scripts/mcp/smoke-check.mjs",
    "codex:mcp": "MCP_SERVERS_CONFIG=.mcp-config.json codex -C .",
    "test:mcp": "bash tests/mcp/run-tests.sh all",
    "test:mcp:transport": "bash tests/mcp/run-tests.sh transport",
    "test:mcp:protocol": "bash tests/mcp/run-tests.sh protocol",
    "test:mcp:auth": "bash tests/mcp/run-tests.sh auth",
    "test:mcp:integration": "bash tests/mcp/run-tests.sh integration",
    "test:mcp:coverage": "bash tests/mcp/run-tests.sh coverage",
    "test:mcp:watch": "bash tests/mcp/run-tests.sh watch",
    "test": "vitest",
    "test:unit": "vitest tests/security tests/performance",
    "test:integration": "vitest tests/integration",
    "test:coverage": "vitest --coverage",
    "test:watch": "vitest --watch",
    "test:ui": "vitest --ui",
    "test:security": "vitest tests/security",
    "test:performance": "vitest tests/performance --run",
    "test:mcpjam": "bash scripts/run-mcpjam-tests.sh",
    "test:mcpjam:inspector": "npx jest tests/mcp/integration/mcpjam-integration.test.ts",
    "test:mcpjam:conformance": "npx @mcpjam/cli test --config tests/mcp/config/eval-config.json",
    "test:mcpjam:benchmark": "npx @mcpjam/cli benchmark --config tests/mcp/config/eval-config.json"
  },
  "keywords": [
    "ai",
    "coordination",
    "consensus",
    "distributed-systems",
    "performance",
    "benchmarking",
    "google-services",
    "load-testing",
    "optimization",
    "monitoring",
    "grafana",
    "prometheus",
    "swarm-intelligence",
    "byzantine-fault-tolerance",
    "raft-consensus",
    "microservices",
    "scalability",
    "real-time",
    "websockets",
    "streaming"
  ],
  "author": "Gemini Flow Contributors",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/clduab11/gemini-flow.git"
  },
  "bugs": {
    "url": "https://github.com/clduab11/gemini-flow/issues"
  },
  "homepage": "https://github.com/clduab11/gemini-flow#readme",
  "dependencies": {
    "@google-cloud/aiplatform": "^5.7.0",
    "@google/generative-ai": "^0.24.1",
    "@modelcontextprotocol/sdk": "^1.19.1",
    "@types/config": "^3.3.5",
    "async": "^3.2.6",
    "axios": "^1.12.2",
    "bull": "^4.16.5",
    "chalk": "^5.6.2",
    "commander": "^14.0.1",
    "compression": "^1.8.1",
    "config": "^4.1.1",
    "cors": "^2.8.5",
    "crypto-js": "^4.2.0",
    "dotenv": "^17.2.3",
    "eventemitter3": "^5.0.1",
    "express": "^5.1.0",
    "ffmpeg-static": "^5.2.0",
    "google-auth-library": "^10.4.0",
    "googleapis": "^161.0.0",
    "helmet": "^8.1.0",
    "inquirer": "^12.9.6",
    "ioredis": "^5.8.1",
    "joi": "^18.0.1",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "moment": "^2.30.1",
    "node-fetch": "^3.3.2",
    "ora": "^9.0.0",
    "p-queue": "^9.0.0",
    "p-retry": "^7.0.0",
    "p-timeout": "^7.0.1",
    "pino": "^10.0.0",
    "pino-pretty": "^13.1.1",
    "prom-client": "^15.1.3",
    "rate-limiter-flexible": "^8.0.1",
    "redis": "^5.8.3",
    "rxjs": "^7.8.2",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "uuid": "^13.0.0",
    "winston": "^3.18.3",
    "ws": "^8.18.3",
    "zod": "3.25.76"
  },
  "devDependencies": {
    "@anthropic-ai/sdk": "^0.65.0",
    "@babel/preset-env": "^7.28.3",
    "@babel/preset-typescript": "^7.27.1",
    "@mcpjam/cli": "^1.1.6",
    "@modelcontextprotocol/server-filesystem": "^2025.8.21",
    "@modelcontextprotocol/server-github": "^2025.4.8",
    "@modelcontextprotocol/server-memory": "^2025.9.25",
    "@modelcontextprotocol/server-puppeteer": "^2025.5.12",
    "@modelcontextprotocol/server-redis": "^2025.4.25",
    "@modelcontextprotocol/server-sequential-thinking": "^2025.7.1",
    "@rollup/plugin-commonjs": "^28.0.6",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^16.0.2",
    "@rollup/plugin-terser": "^0.4.4",
    "@rollup/plugin-typescript": "^12.1.4",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^11.0.6",
    "@supabase/mcp-server-supabase": "^0.5.6",
    "@types/async": "^3.2.25",
    "@types/bcryptjs": "^3.0.0",
    "@types/express": "^5.0.3",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/lodash": "^4.17.20",
    "@types/multer": "^2.0.0",
    "@types/node": "^24.7.0",
    "@types/uuid": "^11.0.0",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^8.46.0",
    "@typescript-eslint/parser": "^8.46.0",
    "@vitest/ui": "^3.2.4",
    "c8": "^10.1.3",
    "concurrently": "^9.2.1",
    "cross-env": "^10.1.0",
    "eslint": "^9.37.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^5.5.4",
    "eslint-plugin-security": "^3.0.1",
    "http-server": "^14.1.1",
    "husky": "^9.1.7",
    "lint-staged": "^16.2.3",
    "mcp-omnisearch": "^0.0.17",
    "nodemon": "^3.1.10",
    "openai": "^6.2.0",
    "prettier": "^3.6.2",
    "rollup": "^4.52.4",
    "rollup-plugin-visualizer": "^6.0.4",
    "semantic-release": "^24.2.9",
    "typedoc": "^0.28.13",
    "typescript": "^5.9.3",
    "vitest": "^3.2.4"
  },
  "optionalDependencies": {
    "canvas": "^3.2.0",
    "puppeteer": "^24.23.0",
    "sharp": "^0.34.4"
  },
  "lint-staged": {
    "*.{js,ts,jsx,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test:unit && npm run lint"
    }
  },
  "browserslist": [
    "node >= 18"
  ],
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/clduab11"
  }
}
